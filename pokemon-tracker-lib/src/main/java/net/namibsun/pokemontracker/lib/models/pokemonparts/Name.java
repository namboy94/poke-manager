package net.namibsun.pokemontracker.lib.models.pokemonparts;

import java.util.HashMap;
import net.namibsun.pokemontracker.lib.serebii.SerebiiParser;
import net.namibsun.pokemontracker.lib.serebii.SerebiiConstants;

/**
 * Class that models a Pokemon Name. This is done internally by storing the name in different languages
 * in a hashmap, with the languages being keys.
 * It is possible to use serebii.net to get all available languages, but an offline version does exist as
 * well, but the language has to be specified manually.
 * Or a already existing Hashmap may be used.
 */
public class Name {

    /**
     * The Hashmap that stores the actual names of the Pokemon, with the language
     * of the name acting as a key. The languages generated by the serebii generator
     * or the multi-language constructor will be stored as non-capitalized strings.
     */
    private HashMap<String, String> names = new HashMap<>();

    /**
     * Creates a new Name object by manually passing a single name and language to use as key
     * @param name:    The name of the Pokemon in the specified language
     * @param language The language to be used as a key for the Hashmap
     */
    public Name(String name, String language) {
        this.names.put(language, name);
    }

    /**
     * Overrides the local name/language hashmap with a different Hashmap
     * @param names: The Hashmap to use to override the local Hashmap
     */
    public Name(HashMap<String, String> names){
        this.names = names;
    }

    /**
     * Sets the standard names available for Pokemon, that are currently available on serebii.net
     * @param english:  The name in English
     * @param french:   The name in French
     * @param german:   The name in German
     * @param japanese: The name in Japanese
     * @param korean:   The name in Korean
     */
    public Name(String english, String french, String german, String japanese, String korean) {

        this.names.put(SerebiiConstants.ENGLISH_KEY, english);
        this.names.put(SerebiiConstants.FRENCH_KEY, french);
        this.names.put(SerebiiConstants.GERMAN_KEY, german);
        this.names.put(SerebiiConstants.JAPANESE_KEY, japanese);
        this.names.put(SerebiiConstants.KOREAN_KEY, korean);

    }

    /**
     * Returns the name of the Pokemon in the spcified language
     * @param language: The language to use as a key
     * @return          The Pokemon's name in the specified language. If the name could not be found,
     *                  the name 'Missingno.' is returned, as a reference to the infamous glitch Pokemon
     *                  from Gen I (Red/Blue/Green)
     */
    public String getName(String language) {
        String name = this.names.get(language);
        if (name == null) {
            name = "Missingno."; // A little joke
        }
        return name;

    }

    /**
     * Creates a new Pokemon name from the Serebii page of that Pokemon
     * This requires an already fetched Jsoup Document of the main page of a Pokemon on serebii.net
     * @param parser: The Serebii Parser to use to get the name
     * @return        The generated Name
     */
    public static Name fromSerebiiPage(SerebiiParser parser) {
        return new Name(parser.parsePokemonName());
    }

}
